{"ast":null,"code":"var _jsxFileName = \"/Users/marco/Desktop/virtual-art-gallery/src/Room.js\";\nimport React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { Plane } from '@react-three/drei';\nimport * as THREE from 'three'; // Ensure THREE is properly imported\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Room() {\n  const lightGreyMaterial = new THREE.MeshStandardMaterial({\n    color: '#f0f0f0'\n  }); // Light grey color\n  const darkGreyMaterial = new THREE.MeshStandardMaterial({\n    color: '#7c7c7c'\n  }); // Light grey color\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Plane, {\n      args: [20, 8],\n      position: [-10, 1, 0],\n      rotation: [0, Math.PI / 2, 0],\n      material: lightGreyMaterial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Plane, {\n      args: [20, 8],\n      position: [10, 1, 0],\n      rotation: [0, -Math.PI / 2, 0],\n      material: lightGreyMaterial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Plane, {\n      args: [20, 8],\n      position: [0, 1, 10],\n      rotation: [0, Math.PI, 0],\n      material: lightGreyMaterial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Plane, {\n      args: [20, 8],\n      position: [0, 1, -10],\n      material: lightGreyMaterial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Plane, {\n      args: [30, 30],\n      position: [0, -3, 0],\n      rotation: [-Math.PI / 2, 0, 0],\n      material: lightGreyMaterial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Plane, {\n      args: [10, 10],\n      position: [0, -2.9, 0],\n      rotation: [-Math.PI / 2, 0, 0],\n      material: darkGreyMaterial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useThree","Plane","THREE","jsxDEV","_jsxDEV","Fragment","_Fragment","Room","lightGreyMaterial","MeshStandardMaterial","color","darkGreyMaterial","children","args","position","rotation","Math","PI","material","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/marco/Desktop/virtual-art-gallery/src/Room.js"],"sourcesContent":["import React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { Plane } from '@react-three/drei';\nimport * as THREE from 'three'; // Ensure THREE is properly imported\n\nfunction Room() {\n  const lightGreyMaterial = new THREE.MeshStandardMaterial({ color: '#f0f0f0' }); // Light grey color\n  const darkGreyMaterial = new THREE.MeshStandardMaterial({ color: '#7c7c7c' }); // Light grey color\n\n\n  return (\n    <>\n      {/* Walls */}\n      <Plane args={[20, 8]} position={[-10, 1, 0]} rotation={[0, Math.PI / 2, 0]} material={lightGreyMaterial} />\n      <Plane args={[20, 8]} position={[10, 1, 0]} rotation={[0, -Math.PI / 2, 0]} material={lightGreyMaterial} />\n      <Plane args={[20, 8]} position={[0, 1, 10]} rotation={[0, Math.PI, 0]} material={lightGreyMaterial} />\n      <Plane args={[20, 8]} position={[0, 1, -10]} material={lightGreyMaterial} />\n\n      {/* Floor */}\n      <Plane args={[30, 30]} position={[0, -3, 0]} rotation={[-Math.PI / 2, 0, 0]} material={lightGreyMaterial} />\n      <Plane args={[10, 10]} position={[0, -2.9, 0]} rotation={[-Math.PI / 2, 0, 0]} material={darkGreyMaterial} />\n\n      \n    </>\n  );\n}\n\nexport default Room;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}